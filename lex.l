%%
[+|-]?[0-9]+	  return(INT);
[+|-]?[0-9]*(\.)?[0-9]+	     			return(FLOAT);
\#	  return(END_OF_STMT);
\,        return(COMMA);
\;	  return(COMMENT_OP);
\;\*	  return(MULTI_COMMENT_START);
\*\;	  return(MULTI_COMMENT_END);
\;\*[^*^\;]*\*\; return(MULTI_COMMENT);
\(	  return(LP);
\)	  return(RP);
\=	  return(ASSIGN_OP);
\=\=	  return(EQUALS_OP);
\>	  return(GREATER_OP);
\>\=	  return(GREATER_EQ_OP);
\<	  return(LESS_OP);
\<\=	  return(LESS_EQ_OP);
\!	  return(NOT_OP);
\&	  return(AND_TOKEN);
\|	  return(OR_TOKEN);
\^	  return(XOR_TOKEN);
\-	  return(MIN_OP);
\-\-	  return(DECREMENT_OP);
\+   	  return(PLUS_OP);
\+\+	  return(INCREMENT_OP);
\/	  return(DIV_OP);
\*	  return(MUL_OP);
\{	  return(LBRACE);
\}	  return(RBRACE);
int	  return(DATA_TYPE);	
float	  return(DATA_TYPE);
bool	  return(DATA_TYPE);
string	  return(DATA_TYPE);
void 	  return(DATA_TYPE);
true	  return(BOOL);
false	  return(BOOL);
for	  return(FOR_TOKEN);
if	  return(IF_TOKEN);
else	  return(ELSE_TOKEN);
while	  return(WHILE_TOKEN);
then	  return(THEN_TOKEN);
when	  return(WHEN_TOKEN);
done	  return(DONE_TOKEN);
do 	  return(DO_TOKEN);
return    return(RETURN_TOKEN);
setSwitch\([0-9]+\,[0-9]?\,[0-1]\)		return(SET_SWITCH_FUNC);
getTimestamp\(\) 				return(GET_TIMESTAMP_FUNC);
receive\([0-9]*\)		return(RECIEVE_FUNC);
send\([a-z|A-Z|0-9|,|\ ]*\)	  		return(SEND_FUNC);
connect\(https\:\/\/[A-Z|a-z]+[0-9|a-z|A-Z]*\.com\)	  		return(CONNECT_FUNC);
https\:\/\/[A-Z|a-z]+[0-9|a-z|A-Z]*\.com 	return(URL_TOKEN);
[A-Z|a-z]+[0-9|a-z|A-Z]*			return(IDENTIFIER);
\"[0-9|a-z|A-Z|\ ]*\"              		return(STRING);
[\ ]*   ;
\n      { extern int lineNumber;
  10716,1,       lineNumber++;}
\t	; 
%%
int yywrap() { return 1; }
